// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id      String   @id @default(uuid())
  username     String   @unique
  email        String   @unique
  password_hash String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  tasks        Task[]
}

model Task {
  task_id     String    @id @default(uuid())
  user_id     String
  title       String
  description String?
  status      TaskStatus
  priority    TaskPriority
  due_date    DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  user        User      @relation(fields: [user_id], references: [user_id])
  categories   TaskCategory[]
}

model Category {
  category_id String    @id @default(uuid())
  name        String    @unique
  tasks       TaskCategory[]
}

model TaskCategory {
  task_id     String
  category_id String

  task        Task      @relation(fields: [task_id], references: [task_id])
  category    Category  @relation(fields: [category_id], references: [category_id])

  @@id([task_id, category_id]) // Composite primary key
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum TaskPriority {
  low
  medium
  high
}